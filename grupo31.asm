; Projeto de IAC - Versao intermédia              ;
;                                                 ;
; Numero 90705	André Miguel Santos Silva         ;
; Numero 90710	Diogo De Melo Pinto               ;
; Numero 90732	João Carlos Soares Marnoto Gaspar ;

LIN EQU 0C000H      ; ENDEREÇO DE ENTRADA TECLADO (LINHA)
COL EQU 0E000H      ; ENDEREÇO DE SAIDA TECLADO (COLUNA)
HEX EQU 0A000H      ; ENDEREÇO DOS DISPLAYS HEXA

PLACE 1000H
linhas:  WORD 1H           ;0001B (1ª linha) guardado em 1000H
         WORD 2H           ;0010B (2ª linha) guardado em 1002H
         WORD 4H           ;0100B (3ª linha) guardado em 1004H
         WORD 8H           ;1000B (4ª linha) guardado em 1006H

PLACE 100AH
operacao: WORD 0H     ;GUARDA A OPERACAO QUE ESTA A SER REALIZADA (C, D, E, F), EM 100AH
PLACE 100CH
numero: WORD 00H      ;GUARDA O ULTIMO NUMERO DOS DISPLAYS EM 100CH
PLACE 100EH
procura: WORD 1H      ;GUARDA O NUMERO QUE REPRESENTA O ESTADO DA PROCURA, ISTO E, (0 (SE ESTA A PROCURAR UM NUMERO) OU 1(SE ESTA A PROCURAR UMA OPEACAO)), EM 100EH

PLACE 0000H
  MOV R1, LIN       ;ENDEREÇO DAS LINHAS  ---> R1
  MOV R2, COL       ;ENDEREÇO DAS COLUNAS ---> R2
  MOV R3, HEX       ;ENDEREÇO DOS HEXAS   ---> R3
  MOV R4, numero    ;R4 <--- 100CH, ENDEREÇO DO NUMERO DOS DISPLAYS :
  MOV R4, [R4]      ;R4 <--- 00H :
  MOVB [R3], R4     ;INICIAR OS DISPLAYS A 00
  MOV R7, 1006H     ;ENDERECO DA ULTIMA LINHA (=1006H)

resetApontador:
  MOV R4, linhas        ;R4 É UM APONTADOR INICIALIZADO A 1000H (1ª LINHA)
  MOV R5, 2H            ;R5 É O INCREMENTO (2H) DO APONTADOR EM R4

procurarTecla:
  MOV R11, [R4]       ;R11 <--- LINHA A PROCURAR (1ª(1H), NO INICIO)
  MOVB [R1], R11      ;ENVIA A LINHA A PROCURAR, LINHA ---> ENDEREÇO DA LINHA (PERIFERICO)
  MOVB R6, [R2]       ;RECEBE O OUTPUT DA COLUNA NO R6
  CMP R6, 0H          ;SE NAO RECEBEU NENHUMA TECLA:
  JZ proxLinha        ;PROCURA NA PROXIMA LINHA
  JMP teclaPrimida    ;TECLA FOI PRIMIDA

proxLinha:
  CMP R4, R7          ;SE CHEGAR A ULTIMA LINHA:
  JZ resetApontador   ;VOLTAR A PRIMEIRA
  ADD R4, R5          ;INCREMENTA 2 AO ENDERECO DA LINHA A PROCURAR
  JMP procurarTecla   ;PROCURAR TECLA NA PROXIMA LINHA

teclaPrimida:
  MOVB R9, [R2]     ;OUTPUT DA COLUNA ---> R9
  CMP R6, R9        ;SE A TECLA AINDA ESTIVER PRIMIDA:
  JZ teclaPrimida   ;VERIFICAR DE NOVO SE AINDA ESTA A SER PRIMIDA

teclaReal:
  MOV R4, 0         ;R4 É UM CONTADOR INICIALIDZADO A 0: NUMERO DA LINHA EM HEXA (0 A 3)
  MOV R5, 0         ;R5 É UM CONTADOR INICIALIDZADO A 0: NUMERO DA COLUNA EM HEXA (0 A 3)
descodLin:
  MOV R8, 1H        ;R8 = 0001H
  CMP R11, R8       ;SE R11 = 0001H:
  JZ descodCol      ;DESCODIFICAR A COLUNA SE JA SE TIVER DESCODIFICADO A LINHA
  SHR R11, 1H       ;SHIFTRIGHT DE 1 BIT PARA VER EM QUE LINHA SE ENCONTRA A TECLA PRIMIDA (HEXA)
  ADD R4, 1H        ;INCREMENTAR O CONTADOR R4 EM 1 PARA CONTAR O NUMERO DA LINHA
  JMP descodLin     ;VOLTAR A CONTAR
descodCol:
  CMP R6, R8        ;SE R6 = 0001H:
  JZ teclaFinal     ;DESCODIFICAR A TECLA NO FORMATO FINAL (0H A FH)
  SHR R6, 1H        ;SHIFTRIGHT DE 1 BIT PARA VER EM QUE COLUNA SE ENCONTRA A TECLA PRIMIDA (HEXA)
  ADD R5, 1H        ;INCREMENTAR O CONTADOR R5 EM 1 PARA CONTAR O NUMERO DA COLUNA
  JMP descodCol     ;VOLTAR A CONTAR
teclaFinal:
  MOV R8, 4H        ;R8 = 4H
  MUL R4, R8        ;R4 = R4*4 (LINHA * 4)
  ADD R4, R5        ;R4 = R4 + R5 (LINHA * 4 + COLUNA) A TECLA FINAL (0H A FH) É DADA POR ESTA FORMULA

  MOV R5, procura   ;R5 <--- ENDEREÇO ONDE ESTA GUARDADO O VALOR DA PROCURA (0 - NUMERO OU 1 - OPERAÇAO)
  MOV R5, [R5]      ;R5 <--- VALOR DA PROCURA (0 - NUMERO OU 1 - OPERAÇAO)
cdef:
  CMP R5, 1H         ;SE PROCURA = 1 (ESTA A PROCURA DE UMA OPERACAO):
  JNZ num            ;SE NAO FOR, PASSA PARA A PROCURA DE UM NUMERO, OU, SE FOR:
  MOV R6, 0BH        ;R6 <--- 0BH
  SUB R6, R4         ;SE A TECLA FOR MENOR OU IGUAL B:
  JNN resetApontador ;VOLTAR A ESPERAR POR UMA TECLA DE OPERACAO E NAO EFETUAR NADA COM NUMEROS
soma3:
  MOV R6, 0EH         ;R6 <--- 0EH
  CMP R4, R6          ;SE A TECLA PRIMIDA FOR E:
  JNZ subtrai3        ;SE NAO FOR E: VER SE É OUTRA OPERACAO. OU, SE FOR:
  MOV R5, numero      ;R5 <--- ENDERECO DO ULTIMO NUMERO QUE ESTAVA NOS DISPLAY
  MOV R6, [R5]        ;R6 <--- ULTIMO NOMERO QUE ESTAVA NOS DISPLAY
  ADD R6, 3H          ;R6 <--- SOMA DO ULTIMO NUMERO NOS DISPLAYS COM 3
  MOV R5, numero      ;R5 <--- ENDERECO DO ULTIMO NUMERO QUE ESTAVA NOS DISPLAY
  MOV [R5], R6        ;[R5] <--- NOVO NUMERO
  MOV R4, R6          ;R4 <--- R6 (NOVO NUMERO)
  MOV R6, 1H          ;R6 <--- 1
  MOV R5, procura     ;R5 <--- ENDERECO DA PROCURA
  MOV [R5], R6        ;[R5] <--- 1H (0 - NUMERO OU 1 - OPERAÇAO), ESTA AGORA A PROCURA DE UMA TECLA DE OPERACAO
  JMP EscreverTecla   ;ESCREVER NOS DISPLAYS O NOVO NUMERO
subtrai3:
  MOV R6, 0FH         ;R6 <--- 0FH
  CMP R4, R6          ;SE A TECLA PRIMIDA FOR F:
  JNZ next            ;SE NAO FOR E: VER SE É OUTRA OPERACAO. OU, SE FOR:
  MOV R5, numero      ;R5 <--- ENDERECO DO ULTIMO NUMERO QUE ESTAVA NOS DISPLAY
  MOV R6, [R5]        ;R6 <--- ULTIMO NOMERO QUE ESTAVA NOS DISPLAY
  SUB R6, 3H          ;R6 <--- SUBTRACAO DO ULTIMO NUMERO NOS DISPLAYS POR 3
  MOV R5, numero      ;R5 <--- ENDERECO DO ULTIMO NUMERO QUE ESTAVA NOS DISPLAY
  MOV [R5], R6        ;[R5] <--- NOVO NUMERO
  MOV R4, R6          ;R4 <--- R6 (NOVO NUMERO)
  MOV R6, 1H          ;R6 <--- 1
  MOV R5, procura     ;R5 <--- ENDERECO DA PROCURA
  MOV [R5], R6        ;[R5] <--- 1H (0 - NUMERO OU 1 - OPERAÇAO), ESTA AGORA A PROCURA DE UMA TECLA DE OPERACAO
  JMP EscreverTecla   ;ESCREVER NOS DISPLAYS O NOVO NUMERO
next:
  MOV R6, 0H          ;R6 <--- 0
  MOV R5, procura     ;R5 <--- ENDERECO DA PROCURA
  MOV [R5], R6        ;[R5] <--- 0H (0 - NUMERO OU 1 - OPERAÇAO), ESTA AGORA A PROCURA DE UM NUMERO
  MOV R5, operacao    ;R5 <--- ENDERECO DA OPERACAO
  MOV [R5], R4        ;[R5] <--- TECLA DE OPERACAO QUE FOI PRIMIDA
  JMP resetApontador  ;VOLTAR A PROCURAR TECLAS, DESDE O INICIO

num:
  MOV R6, 0BH         ;R6 <--- 0BH
  SUB R6, R4          ;SE A TECLA FOR MAIOR QUE B:
  JN resetApontador   ;VOLTAR A PROCURAR UM NUMERO
  MOV R6, 1H          ;R6 <--- 1
  MOV R5, procura     ;R5 <--- ENDERECO DA PROCURA
  MOV [R5], R6        ;[R5] <--- 1H (0 - NUMERO OU 1 - OPERAÇAO), ESTA AGORA A PROCURA DE UMA OPERACAO

OPERACOES:
  MOV R5, operacao    ;R5 <--- ENDERECO DA OPERACAO
  MOV R5, [R5]        ;R5 <--- VALOR DA OPERACAO QUE ESTA A SER EFETUADA
soma:
  MOV R6, 0CH         ;R6 <--- 0CH
  CMP R5, R6          ;SE A OPERACAO FOR IGUAL A 0CH (SOMA):
  JNZ subtracao       ;SE NAO FOR, VERIFICAR SE E UMA SUBTRACAO
  MOV R5, numero      ;R5 <--- ENDERECO DO ULTIMO NUMERO NOS DISPLAYS
  MOV R6, [R5]        ;R6 <--- ULTIMO NUMERO NOS DISPLAYS
  ADD R4, R6          ;R4 <--- SOMA DE R4(TECLA PRIMIDA) COM O ULTIMO NUMERO DOS DISPLAYS
  MOV [R5], R4        ;[R5] <--- ATUALIZA O ULTIMO NUMERO DOS DISPLAYS
  JMP EscreverTecla   ;ESCREVER NOS DISPLAYS O NOVO NUMERO
subtracao:
  MOV R5, numero      ;R5 <--- ENDERECO DO ULTIMO NUMERO NOS DISPLAYS
  MOV R6, [R5]        ;R6 <--- ULTIMO NUMERO NOS DISPLAYS
  SUB R6, R4          ;R6 <--- SUBTRACAO DE R6(ULTIMO NUMERO) COM R4(TECLA PRIMIDA)
  MOV [R5], R6        ;[R5] <--- ATUALIZA O ULTIMO NUMERO DOS DISPLAYS
  MOV R4, R6          ;R4 <--- R6 (PORQUE R6 É O RESULTADO DA SUBTRACAO E VAI TER DE ESTAR EM R4 PARA APARECER NOS DISPLAYS)
  JMP EscreverTecla   ;ESCREVER NOS DISPLAYS O NOVO NUMERO

EscreverTecla:
limitadores:
  MOV R5, 63H         ;R5 <--- 63H (99 DEC)
  SUB R5, R4          ;SE O NUMERO FOR MENOR OU IGUAL A 99:
  JNN nextLim         ;VER SE É MAIOR QUE 0
  MOV R5, 63H         ;R5 <--- 63H (99 DEC)
  MOV R4, R5          ;SE FOR MAIOR QUE 99, ENTAO LIMITA A 99
  MOV R5, numero      ;R5 <--- ENDERECO DO ULTIMO NUMERO NOS DISPLAYS
  MOV [R5], R4        ;[R5] <--- ATUALIZA O ULTIMO NUMERO DOS DISPLAYS
nextLim:
  MOV R5, 00H         ;R5 <--- 00H (00 DEC)
  SUB R4, R5          ;SE O NUMERO FOR MAIOR OU IGUAL A 0:
  JNN valid           ;É VALIDO (00 <= NUMERO <= 99)
  MOV R5, 00H         ;R5 <--- 00H (00 DEC)
  MOV R4, R5          ;SE FOR MENOR QUE 0, ENTAO LIMITA A 0
  MOV R5, numero      ;R5 <--- ENDERECO DO ULTIMO NUMERO NOS DISPLAYS
  MOV [R5], R4        ;[R5] <--- ATUALIZA O ULTIMO NUMERO DOS DISPLAYS

valid:
convertDec:

  MOV R8, R4          ;R8 <--- NUMERO FINAL
  MOV R5, R4          ;R5 <--- NUMERO FINAL
  MOV R6, 0AH         ;R6 <--- 0AH
  MOD R8, R6          ;RESTO DA DIVISAO DO NUMERO EM HEXA POR 10(0AH) DA AS UNIDADES EM DECIMAL
  DIV R5, R6          ;DIVISAO INTEIRA DO NUMERO EM HEXA POR 10(0AH) DA AS DEZENAS EM DECIMAL
  SHL R5, 4           ;PASSAR AS DEZENAS PARA O NIBBLE HIGH DE R5
  OR R8, R5           ;JUNTAR OS DOIS NUMEROS NUM SO (NIBBLE HIGH DE R5 OU NIBBLE LOW DE R8)
  MOV R6, numero      ;R6 <--- ENDERECO DO ULTIMO NUMERO NOS DISPLAYS
  MOV [R6], R4        ;[R4] <--- ATUALIZA O ULTIMO NUMERO DOS DISPLAYS (SEMPRE EM HEXA!)

  MOVB [R3], R8     ;ESCREVER O NUMERO EM DECIMAL NOS DISPLAYS HEXA
  JMP resetApontador ;REPETIR TUDO PARA ESPERAR NOVAS TECLAS
